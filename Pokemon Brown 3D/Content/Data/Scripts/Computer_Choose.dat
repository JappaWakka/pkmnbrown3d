version=2
:if:<Register.Registered(pokemongot)>=true
	@storage.set(int,canind,2)
	@storage.set(str,computer_options,<system.token(Generic_PC_Host_StorageSystem)>,<system.token(Generic_PC_Host_Mailbox)>)
:else
	@storage.set(int,canind,1)
	@storage.set(str,computer_options,<system.token(Generic_PC_Host_Mailbox)>)
:endif

:if:<player.haspokedex>=true
	@storage.set(str,computer_options,<storage.get(str,computer_options)>,<system.token(Generic_PC_Host_DexEvaluation)>)
	@storage.set(int,canind,<storage.get(int,canind)>+1)
:endif

:if:<pokemon.counthalloffame>>0
	@storage.set(str,computer_options,<storage.get(str,computer_options)>,<system.token(Generic_PC_Host_HallOfFame)>)
	@storage.set(int,canind,<storage.get(int,canind)>+1)
:endif
:if:<level.filename>=PlayerHouse_2F
	@storage.set(str,computer_options,<storage.get(str,computer_options)>,<system.token(Generic_PC_Host_Decoration)>)
	@storage.set(int,canind,<storage.get(int,canind)>+1)
:endif

@storage.set(str,computer_options,<storage.get(str,computer_options)>,<system.token(Generic_PC_LogOff)>)
@options.setcancelindex(<storage.get(int,canind)>)

@options.show(<storage.get(str,computer_options)>)
	:when:<system.token(Generic_PC_Host_StorageSystem)>
		@sound.play(PC\LogOn)
		@screen.storagesystem
		@script.start(computer_choose)
	:when:<system.token(Generic_PC_Host_Mailbox)>
		@sound.play(PC\LogOn)
		@screen.mailsystem
		@script.start(computer_choose)
	:when:<system.token(Generic_PC_Host_DexEvaluation)>
		@sound.play(PC\LogOn)
		@script.start(Computer_DexEvaluation)
		@Text.Show(<system.token(Generic_PC_ChooseHost)>)
		@script.start(computer_choose)
	:when:<system.token(Generic_PC_Host_HallOfFame)>
		@sound.play(PC\LogOn)
		@screen.halloffame
		@script.start(computer_choose)
	:when:<system.token(Generic_PC_Host_Decoration)>
		@sound.play(PC\LogOn)
		@script.start(Computer_Decoration)
		@Text.Show(<system.token(Generic_PC_ChooseHost)>)
	:when:<system.token(Generic_PC_LogOff)>
		@sound.play(PC\TurnOff)
		:endscript
:endwhen

:end
