version=2

@music.play(Encounter_Rival)
:if:<player.position(x)>=11
	@npc.turn(1,3)
	@player.turnto(1)
:else
	@npc.turn(1,2)
	@player.turnto(0)
:endif
@Text.Show(<system.token(Botan_HauntedForest_Area2_Mura_BeforeBattle)>)
:if:<level.riding>=true
	@music.setmusicloop(Ride)
:else
	@music.setmusicloop(HauntedForest)
:endif

:if:<Register.Registered(Starter_Charmander)>=true
	@battle.trainer(mura\2squirtle)
:endif
:if:<Register.Registered(Starter_Squirtle)>=true
	@battle.trainer(mura\2bulbasaur)
:endif
:if:<Register.Registered(Starter_Bulbasaur)>=true
	@battle.trainer(mura\2charmander)
:endif
@Text.Show(<system.token(Botan_HauntedForest_Area2_Mura_AfterBattle)>)
@music.play(Encounter_Rival)
:if:<player.position(x)>=11
	@npc.turn(1,2)
	@npc.move(1,2)
	@npc.turn(1,3)
	@npc.move(1,4)
	@npc.turn(1,2)
	@npc.move(1,2)
:else
	@npc.turn(1,3)
	@npc.move(1,1)
	@npc.turn(1,2)
	@npc.move(1,2)
	@npc.turn(1,3)
	@npc.move(1,1)
	@npc.turn(1,2)
	@npc.move(1,2)
	@npc.turn(1,3)
	@npc.move(1,2)
:endif
@npc.remove(1)
@npc.register(Botan\HauntedForest\Area2.dat|1|remove)
@register.register(MuraBotanBattle)
:if:<level.riding>=true
	@music.play(Ride)
:else
	@music.play(HauntedForest)
:endif
@Entity.Remove(2)
:end
