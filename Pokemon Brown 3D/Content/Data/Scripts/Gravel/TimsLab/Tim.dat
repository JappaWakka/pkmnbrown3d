version=2

:if:<Register.Registered(tim1)>=true
	@Text.Show(<system.token(Gravel_TimsLab_Tim_ChoosePokemon)>)
	:end
:endif

:if:<Register.Registered(tim2)>=true
	@Text.Show(<system.token(Gravel_TimsLab_Tim_GoodLuck)>)
	:end
:endif

:if:<Register.Registered(tim3)>=true
	@Text.Show(<system.token(Gravel_TimsLab_Tim_TakeGoodCare)>)
	:end
:endif

:if:<Register.Registered(pizza)>=true <and> <Register.Registered(pokedex)>=false
	@Text.Show(<system.token(Gravel_TimsLab_Pokedex1)>)
	@item.clearitem(gm0)
	@Text.Show(<system.token(Gravel_TimsLab_Pokedex2)>)
	@music.play(Encounter_Rival)
	@Text.Show(<system.token(Gravel_TimsLab_Pokedex3)>)
	@NPC.spawn(4,0,11,0,0,Rival,0,0,Mura,4,Still)
	@NPC.Turn(0,2)
	@player.turnto(2,1)
	@NPC.move(4,9)
	@music.play(TimsLab)
	:if:<player.position(x)>=5
		@player.turnto(0,1)
	:else
		@Player.turnto(3)
	:endif
	@Text.Show(<system.token(Gravel_TimsLab_Pokedex4)>)
	@player.receivepokedex
	@sound.play(Receive_KeyItem,1)
	@Text.Show(<system.token(Gravel_TimsLab_Pokedex5)>)
	@entity.remove(8)
	@entity.remove(9)
	@level.update
	@Text.Show(<system.token(Gravel_TimsLab_Pokedex6)>)
	@player.turnto(2,1)
	@Text.Show(<system.token(Gravel_TimsLab_Pokedex7)>)
	@music.play(Encounter_Rival)
	@npc.turn(4,2)
	@npc.move(4,9)
	@npc.remove(4)
	@music.play(TimsLab)
	@Register.Register(pokedex)
	@register.unregister(tim3)
	@Register.Register(tim4)
	@NPC.register(Caves\Merson\Outside.dat|0|remove)
	:end
:endif

:if:<Register.Registered(tim4)>=true
	@Text.Show(<system.token(Gravel_TimsLab_Tim_CatchPokemon1)>)
	@Item.Give(5,5)
	@Item.MessageGive(5,5)
	@Text.Show(<system.token(Gravel_TimsLab_Tim_CatchPokemon2)>)
	@register.unregister(tim4)
	@Register.Register(tim5)
	:end
:endif

:if:<Register.Registered(tim5)>=true
	@Text.Show(<system.token(Gravel_TimsLab_Tim_ComeSeeMeSometimes)>)
	:end
:endif

:if:<Register.Registered(Dex_Glitched)>=true
	@Text.Show(<system.token(Gravel_TimsLab_Tim_GlitchedPokedex1)>)
	:if:<System.FileExists(Textures\PhanceroDexEntry_Repaired_<system.language>.png)>=true
		@Screen.ShowImage(Textures\PhanceroDexEntry_Repaired_<system.language>)
	:else
		@Screen.ShowImage(Textures\PhanceroDexEntry_Repaired_en)
	:endif
	@Text.Show(<system.token(Gravel_TimsLab_Tim_GlitchedPokedex2)>)
	@Register.Unregister(Dex_Glitched)
	@Register.Register(Dex_Repeared)
	@Script.Start(Gravel\TimsLab\JappaWakka)
	:end
:else
	:if:<Register.Registered(tim6)>=true
		@Text.Show(<system.token(Gravel_TimsLab_Tim_DexEvaluation)>)
		@script.start(DexEvaluation)
		@Text.Show(<system.token(DexEvaluation_BeforeRating)>)
		:if:<storage.get(bool,NewEvaluation)>=true
			@Sound.Play(PokedexNewRating,1)
		:endif
		
		:if:<Register.Registered(RijonDexComplete)>=true
			:if:<Register.Registered(ReceiveShinyCharm)>=false
				@Text.Show(<storage.get(str,EvaluationText)>)
				@Item.Give(242,1)
				@Item.MessageGive(242,1)
				@Register.Register(ReceiveShinyCharm)
				@Text.Show(<system.token(Gravel_TimsLab_Tim_DexComplete2)>)
				:end
			:else
				@Text.Show(<storage.get(str,EvaluationText)>*<system.token(Gravel_TimsLab_Tim_DexComplete2)>)
			:endif
			:if:<Register.Registered(DecorationItem_DexDiploma)>=false
				@text.notification(<system.token(DecorationItem_Received_DexDiploma)>,800,1,1,,,0,0)
				@Register.Register(DecorationItem_DexDiploma)
			:endif
		:else
			@Text.Show(<storage.get(str,EvaluationText)>)
		:endif
		:end
	:endif
:endif
:end
