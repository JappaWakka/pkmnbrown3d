version=2

@Text.Show(<system.token(League_EntranceHall_MoveTutor_Male_Question)>)
@options.show(<system.token(global_yes)>,<system.token(global_no)>)
	:when:<system.token(global_yes)>
		:if:9000><player.money>
			@Text.Show(<system.token(League_EntranceHall_MoveTutor_Male_NotEnoughMoney)>)
			:end
		:else
			@Text.Show(<system.token(League_EntranceHall_MoveTutor_Male_WhichPokémon)>)
			@Storage.Set(bool,CanExit,false)
			:while:<storage.get(bool,CanExit)>=false
				@Pokemon.Select(1,1,0,126)
				:if:<not><pokemon.selected>=-1
					:if:<Pokemon.CanLearnAttack(<pokemon.selected>,126)>=true
						:if:<Pokemon.HasAttack(<pokemon.selected>,126)>=false
							@Pokemon.LearnAttack(<pokemon.selected>,126)
							:if:<Pokemon.HasAttack(<pokemon.selected>,126)>=true
								@Player.Money(-9000)
								@sound.play(buy)
								@Storage.Set(bool,CanExit,true)
							:endif
						:else
							@Text.Show(<system.token(League_EntranceHall_MoveTutor_Male_FireBlast_AlreadyKnows)>)
						:endif
					:else
						@Text.Show(<system.token(League_EntranceHall_MoveTutor_Male_FireBlast_CannotLearn)>)
					:endif
				:else
					@Storage.Set(bool,CanExit,true)
				:endif
			:endwhile
			@Text.Show(<system.token(League_EntranceHall_MoveTutor_Male_Outro)>)
			:end
		:endif
		
	:when:<system.token(global_no)>
		@Text.Show(<system.token(League_EntranceHall_MoveTutor_Male_Outro)>)
		:end
		
:endwhen
:end
