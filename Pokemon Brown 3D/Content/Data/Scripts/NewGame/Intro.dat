Version=2

@Screen.FadeOutColor(255,255,255)
@screen.fadeout(20)
@camera.set(9,0.5,9,0,0-0.1)
@camera.update
@storage.set(bool,SelectedDifficulty,false)
:while:<storage.get(bool,SelectedDifficulty)>=false
	
	:if:<Register.Registered(DifficultyStart)>=false
		@Text.Show(<system.token(DifficultySelect_Question1)>)
		@Register.Register(DifficultyStart)
	:else
		@Text.Show(<system.token(DifficultySelect_Question2)>)
	:endif
	
	@Options.SetCancelIndex(0)
	@Options.Show(<system.token(option_screen_game_difficulty_easy)>,<system.token(option_screen_game_difficulty_hard)>,<system.token(option_screen_game_difficulty_superhard)>)
		:when:<system.token(option_screen_game_difficulty_easy)>
			@Text.Show(<system.token(DifficultySelect_Answer_Normal)>)
			@Options.SetCancelIndex(1)
			@Options.Show(<system.token(global_yes)>,<system.token(global_no)>)
				:when:<system.token(global_yes)>
					@Player.SetDifficulty(0)
					@storage.set(bool,SelectedDifficulty,true)
			:endwhen
		:when:<system.token(option_screen_game_difficulty_hard)>
			@Text.Show(<system.token(DifficultySelect_Answer_Hard)>)
			@Options.SetCancelIndex(1)
			@Options.Show(<system.token(global_yes)>,<system.token(global_no)>)
				:when:<system.token(global_yes)>
					@Player.SetDifficulty(1)
					@storage.set(bool,SelectedDifficulty,true)
			:endwhen
		:when:<system.token(option_screen_game_difficulty_superhard)>
			@Text.Show(<system.token(DifficultySelect_Answer_Nuzlocke)>)
			@Options.SetCancelIndex(1)
			@Options.Show(<system.token(global_yes)>,<system.token(global_no)>)
				:when:<system.token(global_yes)>
					@Player.SetDifficulty(2)
					@storage.set(bool,SelectedDifficulty,true)
			:endwhen
	:endwhen
:endwhile
@Text.Show(<system.token(DifficultySelect_End)>)
@Screen.FadeOutColor(255,255,255)
@Screen.FadeIn(20)
@camera.update

@Music.Play(NewGameIntro)

@npc.spawn(13,0,5,1,,Tim,0,1,Tim,0,Still)
@npc.move(0,4)
@npc.turn(0,2)
@Text.Show(<system.token(NewGameIntro_1)>)

@Screen.FadeOutColor(255,255,255)
@screen.fadeout(20)
@camera.update

@npc.remove(0)
@npc.spawn(9,0,5,1,,[POKEMON|N]18,1,2,Pidgeot,1,Still)
@level.update

@screen.fadein(20)
@camera.update

@Text.Show(<system.token(NewGameIntro_2)>)
@Pokemon.Cry(18)
@Text.Show(<system.token(NewGameIntro_3)>)

@screen.fadeout(20)
@camera.update

@screen.skinselection()

@Options.Show(<system.token(NewGameIntro_NewNameOption)>,Brown,Beige,Adam)
:when:<system.token(NewGameIntro_NewNameOption)>
	@screen.input(<screen.selectedname>,name,,10)
	@player.setname(<system.lastinput>)
:when:Brown
	@player.setname(Brown)
:when:Beige
	@player.setname(Beige)
:when:Adam
	@player.setname(Adam)
:endwhen

@npc.remove(1)
@player.setskin(<screen.selectedskin>)

@npc.spawn(9,0,5,1,,<screen.selectedskin>,0,2,<screen.selectedskin>,2,Still)
@level.update

@screen.fadein(20)
@camera.update

@Text.Show(<system.token(NewGameIntro_4)>)

@storage.set(integer,screenFade,0)

:while:<storage.get(integer,screenFade)><255
    @camera.setz(~-0.01)
    @camera.sety(~-0.001)
    @camera.setpitch(~-0.0012)
    @camera.update
    @storage.set(integer,screenFade,<storage.get(integer,screenFade)>+1)
    @screen.setfade(<storage.get(integer,screenFade)>)
:endwhile

@player.setot(<system.random(0,65255)>)
@player.addmoney(3000)
@player.setrivalskin(Rival)
@player.setrivalname(Mura)
@Item.Give(78)
@Player.ReceivePokegear
@Register.Register(pokegear_remove_worldmap)
@Register.Register(pokegear_remove_phone)
@Screen.FadeOutColor
@system.endnewgame(Seashore\PlayerHouse_2F.dat,6,0.1,5,3)
@Register.Register(Snorlax_OldRoute47_ModelPath,str,Models\SleepingSnorlax\Snorlax_Normal)
@Register.Register(Snorlax_Route61_ModelPath,str,Models\SleepingSnorlax\Snorlax_Normal)

:end
